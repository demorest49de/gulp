{"version":3,"file":"../../../js/module/blog/handleLoadBlog.js","names":["pageSettings","currentPage","endPage","currentPageStr","setStorage","key","value","localStorage","setItem","getPageFromStorage","getItem","Number","isInteger","loadItemsHandler","$","getRandomIntInclusive","min","max","Math","ceil","floor","random","async","callback","result","fetch","json","loadArticles","data","meta","pagination","total","articlesHTML","map","item","index","strDate","dt_options","day","month","year","Date","toLocaleDateString","split","slice","monthDate","monthName","yearNumber","getFormattedDate","strTime","hour","minute","toLocaleTimeString","toString","getFormattedTime","article","document","createElement","classList","add","innerHTML","id","title","blogItems","blogList","childElementCount","childNodes","remove","append","setPage","pageElems","pageList","querySelectorAll","forEach","element","links","elem","getAttribute","parentElement","setArrows","arrowNodes","blogPagination","leftArrow","rightArrow","setArrowLink","leftLink","href","rightLink","paginationClickHandler","addEventListener","ev","preventDefault","target","console","log","targetPage","paginationHandler","closest","arrowsClick"],"sources":["module/blog/handleLoadBlog.js"],"mappings":"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","sourcesContent":["const pageSettings = () => {\r\n    return {\r\n        currentPage: \"\",\r\n        endPage: \"\",\r\n        currentPageStr: 'currentPage',\r\n    };\r\n};\r\n\r\nlet {currentPage, currentPageStr, endPage} = pageSettings();\r\n\r\nconst setStorage = (key, value) => {\r\n    localStorage.setItem(key, `${value}`);\r\n    return value;\r\n};\r\n\r\nconst getPageFromStorage = () => {\r\n    currentPage = localStorage.getItem(currentPageStr);\r\n    // console.log(' : ', Number.isInteger(currentPage), currentPage);\r\n\r\n    currentPage = currentPage && Number.isInteger(+currentPage) ? currentPage : setStorage(currentPageStr, '1');\r\n    // console.log(' : ', currentPage);\r\n};\r\n\r\nexport const loadItemsHandler = ($) => {\r\n\r\n    const loadArticles = async (callback) => {\r\n        const result = await fetch(`https://gorest.co.in/public-api/posts?page=${currentPage}&per_page=12`);\r\n        const data = await result.json();\r\n\r\n        callback(data);\r\n    };\r\n\r\n    const getFormattedDate = () => {\r\n        const dt_options = {day: `numeric`, month: `long`, year: `numeric`};\r\n        const today = new Date();\r\n        const strDate = today.toLocaleDateString(\"ru-RU\", dt_options).split(\" \").slice(0, -1);\r\n        const [monthDate, monthName, yearNumber] = strDate;\r\n        return `${monthDate} ${monthName} ${yearNumber}, `;\r\n    };\r\n\r\n    const getFormattedTime = () => {\r\n        const dt_options = {hour: `2-digit`, minute: `2-digit`};\r\n        const today = new Date();\r\n        const strTime = today.toLocaleTimeString(\"ru-RU\", dt_options).split(\" \");\r\n        return strTime.toString();\r\n    };\r\n\r\n    const getRandomIntInclusive = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n    };\r\n\r\n    const renderArticles = (data) => {\r\n\r\n        endPage = data.meta.pagination.total;\r\n        setStorage('endPage', endPage);\r\n        const articlesHTML = data.data.map((item, index) => {\r\n\r\n            // console.log(' : ', item);\r\n\r\n            const strDate = getFormattedDate();\r\n            const strTime = getFormattedTime();\r\n            //\r\n            const article = document.createElement('article');\r\n            article.classList.add('blog__article', 'article');\r\n            article.innerHTML = `\r\n                <a class=\"article__link\" href=\"article.html?id=${item.id}\">\r\n                    <picture class=\"article__image\">\r\n                        <source srcset=\"./img/blog/${index}.avif\" type=\"image/avif\">\r\n                        <source srcset=\"./img/blog/${index}.webp\" type=\"image/webp\">\r\n                        <img src=\"./img/blog/${index}.png\" alt=\"${item.title}\" width=\"140\" height=\"140\">\r\n                    </picture>\r\n                    <div class=\"article__block\">\r\n                        <h2 class=\"article__subtitle\">\r\n                            <span class=\"article__text\">\r\n                                ${item.title}\r\n                            </span>\r\n                        </h2>\r\n                        <div class=\"article__subblock\">\r\n                            <div class=\"article__datetime\">\r\n                                <span class=\"article__date\">${strDate}</span>\r\n                                <span class=\"article__time\">${strTime}</span>\r\n                            </div>\r\n                        \r\n                            <div class=\"article__views-comments\">\r\n                                <span class=\"article__text-block\">\r\n                                <svg class=\"article__icon\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <use href=\"./img/blog/views-chat.svg#views\"></use>\r\n                                </svg>\r\n                                    ${getRandomIntInclusive(1, 3)}.${getRandomIntInclusive(0, 9)}K</span>\r\n                                <span class=\"article__text-block\">\r\n                                <svg class=\"article__icon\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <use href=\"./img/blog/views-chat.svg#chat\"></use>\r\n                                </svg>\r\n                                    ${getRandomIntInclusive(13, 200)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n        `;\r\n\r\n            return article;\r\n        });\r\n\r\n        while ($.blogItems.blogList.childElementCount > 0) {\r\n            $.blogItems.blogList.childNodes[0].remove();\r\n        }\r\n    \r\n        $.blogItems.blogList.append(...articlesHTML);\r\n    };\r\n\r\n    loadArticles(renderArticles);\r\n};\r\n\r\nconst setPage = ($) => {\r\n    getPageFromStorage();\r\n\r\n    const nodeListOf = $.blogItems.pageElems.pageList.querySelectorAll('.pagination__item');\r\n    [...nodeListOf].forEach(element => {\r\n        element.classList.remove('pagination__item-active');\r\n    });\r\n\r\n    $.blogItems.pageElems.links.forEach(elem => {\r\n        if (elem.getAttribute('data-pagenumber') === currentPage) {\r\n            elem.parentElement.classList.add('pagination__item-active');\r\n            return;\r\n        }\r\n    });\r\n};\r\n\r\nconst setArrows = ($) => {\r\n    const arrowNodes = $.blogItems.blogPagination.querySelectorAll('svg');\r\n    const [leftArrow, rightArrow] = arrowNodes;\r\n\r\n    if (+currentPage !== 1) {\r\n        leftArrow.classList.add('pagination__arrow-active');\r\n    }else{\r\n        leftArrow.classList.remove('pagination__arrow-active');\r\n    }\r\n\r\n    if (+currentPage >= 3) {\r\n        rightArrow.classList.remove('pagination__arrow-active');\r\n    }else{\r\n        rightArrow.classList.add('pagination__arrow-active');\r\n    }\r\n\r\n\r\n};\r\n\r\nconst setArrowLink = ($) => {\r\n    endPage = localStorage.getItem('endPage');\r\n    if (+currentPage > 1) {\r\n        $.blogItems.pageElems.leftLink.href = `blog.html?page=${+currentPage - 1}`;\r\n    }\r\n    if (+currentPage < +endPage) {\r\n        $.blogItems.pageElems.rightLink.href = `blog.html?page=${+currentPage + 1}`;\r\n    }\r\n};\r\n\r\nexport const paginationClickHandler = ($) => {\r\n    const pageClick = () => {\r\n        $.blogItems.pageElems.pageList.addEventListener('click', (ev) => {\r\n            ev.preventDefault();\r\n            const target = ev.target;\r\n            console.log(' : ',currentPage, endPage);\r\n            const targetPage = target.getAttribute('data-pageNumber');\r\n            console.log(' : ',targetPage);\r\n            if(+targetPage !== +currentPage){\r\n                currentPage = (target.getAttribute('data-pageNumber'));\r\n                setStorage(currentPageStr, currentPage);\r\n                loadItemsHandler($);\r\n                paginationHandler($);\r\n            }\r\n        });\r\n    };\r\n\r\n    const arrowsClick = () => {\r\n        const leftLink = $.blogItems.pageElems.leftLink;\r\n        const rightLink = $.blogItems.pageElems.rightLink;\r\n\r\n        leftLink.addEventListener('click', (ev) => {\r\n            ev.preventDefault();\r\n            const target = ev.target;\r\n            const anchor = target.closest('.pagination__link-left');\r\n\r\n            if (anchor && (+currentPage > 1)) {\r\n                currentPage = (+currentPage - 1);\r\n                setStorage(currentPageStr, currentPage);\r\n                loadItemsHandler($);\r\n                paginationHandler($);\r\n            }\r\n        });\r\n\r\n        rightLink.addEventListener('click', (ev) => {\r\n            ev.preventDefault();\r\n            const target = ev.target;\r\n            const anchor = target.closest('.pagination__link-right');\r\n\r\n            // if (anchor && (+currentPage <= +endPage)) {\r\n            if (anchor && (+currentPage < 3)) {\r\n                currentPage = (+currentPage + 1);\r\n                setStorage(currentPageStr, currentPage);\r\n                loadItemsHandler($);\r\n                paginationHandler($);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    pageClick();\r\n    arrowsClick();\r\n};\r\n\r\nexport const paginationHandler = ($) => {\r\n\r\n    setPage($);\r\n    setArrows($);\r\n    setArrowLink($);\r\n};"]}